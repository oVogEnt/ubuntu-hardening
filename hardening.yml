---
- name: Run cis hardening
  hosts: all
  gather_facts: true
  pre_tasks:
    - name: Ensure noexec option set on /tmp partition
      mount:
        path: /tmp
        src: tmpfs
        fstype: tmpfs
        opts: noexec,nosuid,nodev
        state: mounted

    - name: Ensure filesystem integrity is regularly checked
      cron:
        name: "Filesystem Integrity Check"
        minute: "0"
        hour: "5"
        user: root
        job: "/usr/sbin/aide --check"

    - name: Ensure bootloader password is set
      lineinfile:
        path: /etc/grub.d/40_custom
        line: 'set superusers="root"\npassword_pbkdf2 root grub.pbkdf2.sha512.10000.<hash>'
        create: yes

    - name: Ensure bootloader password is set
      block:
        - name: Ensure GRUB config directory exists
          file:
            path: /etc/grub.d
            state: directory
            mode: '0755'

        - name: Set GRUB bootloader password
          lineinfile:
            path: /etc/grub.d/40_custom
            line: |
              set superusers="root"
              password_pbkdf2 root grub.pbkdf2.sha512.10000.<hash>
            create: yes

        - name: Update GRUB configuration
          ansible.builtin.command: update-grub

    - name: Ensure systemd-timesyncd is configured
      block:
        - name: Install systemd-timesyncd
          apt:
            name: systemd-timesyncd
            state: present

        - name: Enable and start systemd-timesyncd
          systemd:
            name: systemd-timesyncd
            enabled: yes
            state: started

    - name: Ensure IPv6 router advertisements are not accepted
      sysctl:
        name: net.ipv6.conf.all.accept_ra
        value: 0
        sysctl_set: yes
        state: present
        reload: yes

    - name: Ensure /etc/hosts.deny is configured
      lineinfile:
        path: /etc/hosts.deny
        line: "ALL: ALL"

    - name: Ensure outbound and established connections are configured
      ufw:
        rule: allow
        direction: outgoing
        from_ip: any
        to_ip: any
        from_port: any
        to_port: any
        proto: any

    - name: Ensure journald is configured to write logfiles to persistent disk
      lineinfile:
        path: /etc/systemd/journald.conf
        line: "Storage=persistent"
        create: yes

    - name: Restart systemd-journald
      systemd:
        name: systemd-journald
        state: restarted

    - name: Ensure at/cron is restricted to authorized users
      block:
        - name: Ensure cron.deny does not exist
          file:
            path: /etc/cron.deny
            state: absent

        - name: Ensure at.deny does not exist
          file:
            path: /etc/at.deny
            state: absent

        - name: Create cron.allow
          file:
            path: /etc/cron.allow
            state: touch

        - name: Create at.allow
          file:
            path: /etc/at.allow
            state: touch

        - name: Restrict cron.allow permissions
          file:
            path: /etc/cron.allow
            owner: root
            group: root
            mode: '0600'

        - name: Restrict at.allow permissions
          file:
            path: /etc/at.allow
            owner: root
            group: root
            mode: '0600'

    - name: Ensure SSH Idle Timeout Interval is configured
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: "^ClientAliveInterval"
        line: "ClientAliveInterval 300"

    - name: Ensure inactive password lock is 30 days or less
      lineinfile:
        path: /etc/login.defs
        regexp: "^INACTIVE"
        line: "INACTIVE=30"

    - name: Ensure access to the su command is restricted
      block:
        - name: Ensure wheel group exists
          group:
            name: wheel
            state: present

        - name: Add users to wheel group
          user:
            name: "{{ item }}"
            groups: wheel
            append: yes
          with_items: "{{ allow_users_wheel }}"

        - name: Restrict su command to wheel group
          lineinfile:
            path: /etc/pam.d/su
            state: present
            regexp: "^#auth\\s+required\\s+pam_wheel.so"
            line: "auth required pam_wheel.so use_uid"

    - name: Ensure permissions on /etc/passwd- are configured
      file:
        path: /etc/passwd-
        owner: root
        group: root
        mode: '0600'
  roles:
    - role_cis
  post_tasks:
    - name: Reload firewall
      ansible.builtin.shell: "iptables -P OUTPUT ACCEPT"
      become: true

# Add unit file for iptables service:
# /etc/systemd/system/iptables-rules.service
#
# [Unit]
# Description=Apply custom iptables rules
# After=network.target
#
# [Service]
# ExecStart=/sbin/iptables -P OUTPUT ACCEPT
# ExecStartPost=/usr/sbin/netfilter-persistent save
# Type=oneshot
# RemainAfterExit=yes
#
# [Install]
# WantedBy=multi-user.target
#
# systemctl daemon-reload
# systemctl enable --now iptables-rules.service
